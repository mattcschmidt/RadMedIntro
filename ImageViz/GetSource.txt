//BitmapSource bitmapSource = null;
            int[,] pixels = new int[_image.YSize, _image.XSize];
            _image.GetVoxels(SliceNum, pixels);
            int[] flat_pixels = new int[_image.YSize * _image.XSize];
            //lay out pixels into single array
            for (int i = 0; i < _image.YSize; i++)
            {
                for (int ii = 0; ii < _image.XSize; ii++)
                {
                    flat_pixels[i + _image.XSize * ii] = pixels[i, ii];
                }
            }
            //translate into byte array
            var drr_max = flat_pixels.Max();
            var drr_min = flat_pixels.Min();
            PixelFormat format = PixelFormats.Gray8;//low res image, but only 1 byte per pixel. 
            int stride = (_image.XSize * format.BitsPerPixel + 7) / 8;
            byte[] image_bytes = new byte[stride * _image.YSize];
            for (int i = 0; i < flat_pixels.Length; i++)
            {
                double value = flat_pixels[i];
                image_bytes[i] = Convert.ToByte(255 * ((value - drr_min) / (drr_max - drr_min)));
            }
            //build the bitmapsource.
            TransverseImage.Source = BitmapSource.Create(_image.XSize, _image.YSize, 25.4 / _image.XRes, 25.4 / _image.YRes, format, null, image_bytes, stride);